{"version":3,"sources":["img/IMG_1109.jpg","components/Navitem.js","components/Navbar.js","contents/Home.js","contents/About.js","contents/Education.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navitem","id","this","props","item","exact","to","tolink","activeStyle","background","Component","Navbar","activeitem","x","state","NavItemActive","length","document","getElementById","classList","remove","setState","add","Home","className","height","width","src","profilepic","text","speed","eraseDelay","About","Education","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,sC,mNCW5BC,E,uKAPP,OACI,wBAAIC,GAAIC,KAAKC,MAAMC,MACf,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAIJ,KAAKC,MAAMI,OAAQC,YAAa,CAACC,WAAW,cAAgBP,KAAKC,MAAMC,W,GAJpFM,aC8BPC,E,kDA7BX,WAAYR,GACX,IAAD,8BACI,cAAMA,IAKVS,WAAa,SAACC,GAEN,EAAKC,MAAMC,cAAcC,OAAS,GAClCC,SAASC,eAAe,EAAKJ,MAAMC,eAAeI,UAAUC,OAAO,UAEvE,EAAKC,SAAS,CAAE,UAAaR,IAAK,WAC9BI,SAASC,eAAe,EAAKJ,MAAMC,eAAeI,UAAUG,IAAI,cAVpE,EAAKR,MAAQ,CACT,cAAiB,IAHzB,E,qDAgBI,OACI,6BACI,4BACI,kBAAC,EAAD,CAASV,KAAK,OAAOG,OAAO,MAC5B,kBAAC,EAAD,CAASH,KAAK,QAAQG,OAAO,WAC7B,kBAAC,EAAD,CAASH,KAAK,YAAYG,OAAO,qB,GAvBhCG,a,kCCWNa,E,uKARP,OACI,yBAAKC,UAAU,eACX,yBAAKC,OAAO,QAAQC,MAAM,QAAQC,IAAKC,IAAYJ,UAAU,eAC7D,kBAAC,IAAD,CAAmBA,UAAU,eAAeK,KAAM,CAAC,yBAA0B,wBAAyBC,MAAO,IAAKC,WAAY,W,GAL3HrB,aCkBJsB,E,uKAlBP,OACI,yBAAKR,UAAU,UACX,wBAAIA,UAAU,YAAd,YACA,mCACA,yCACA,6CAAkB,yCAClB,6BACA,2QAGuG,6BAHvG,+D,GATId,aCiBLuB,E,uKAff,OACA,yBAAKT,UAAU,UACf,wBAAIA,UAAU,YAAW,kDAAzB,8BAEA,sCACA,oCAAa,6BACb,mCAAY,6BACZ,0CAAmB,6BACnB,uCAAgB,6BAChB,kC,GAXwBd,aC0BTwB,MAff,WACI,OACI,kBAAC,IAAD,KACI,yBAAKV,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOnB,OAAK,EAAC8B,KAAK,KAAI,kBAAC,EAAD,OACtB,kBAAC,IAAD,CAAOA,KAAK,UAAS,kBAAC,EAAD,OACrB,kBAAC,IAAD,CAAOA,KAAK,cAAa,kBAAC,EAAD,OACzB,kBAAC,IAAD,CAAU7B,GAAG,UCTb8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1B,SAASC,eAAe,SDyHpB,kBAAmB0B,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1d02f524.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG_1109.8f32bb71.jpg\";","import React, { Component } from 'react';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nclass Navitem extends Component {\r\n    render() {\r\n        return (\r\n            <li id={this.props.item}>\r\n                <NavLink exact to={this.props.tolink} activeStyle={{background:\"dark blue\"}} >{this.props.item}</NavLink>\r\n            </li>\r\n        )\r\n    }\r\n}\r\nexport default Navitem","import React, { Component } from 'react';\r\nimport Navitem from './Navitem';\r\nclass Navbar extends Component {\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n        this.state = {\r\n            'NavItemActive': ''\r\n        }\r\n    }\r\n    activeitem = (x) => \r\n    {\r\n        if (this.state.NavItemActive.length > 0) {\r\n            document.getElementById(this.state.NavItemActive).classList.remove('active');\r\n        }\r\n        this.setState({ 'NavItemId': x }, () => {\r\n            document.getElementById(this.state.NavItemActive).classList.add('active');\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <ul>\r\n                    <Navitem item=\"Home\" tolink=\"/\" ></Navitem>\r\n                    <Navitem item=\"About\" tolink=\"/about\" ></Navitem>\r\n                    <Navitem item=\"Education\" tolink=\"/education\" ></Navitem>\r\n\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport ReactTypingEffect from 'react-typing-effect';\r\nimport profilepic from '../img/IMG_1109.jpg';\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"condiv home\">\r\n                <img height=\"500vh\" width=\"500vh\" src={profilepic} className=\"profilepic\"></img>\r\n                <ReactTypingEffect className=\"typingeffect\" text={['Hi, This is Swati here', 'I am a web developer']} speed={100} eraseDelay={700} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home","import React, { Component } from 'react';\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"condiv\">\r\n                <h1 className=\"subtopic\">About Me</h1>\r\n                <h4>Hi,</h4>\r\n                <h1>I'm Swati</h1>\r\n                <h3>Front-end Web <u>Developer</u></h3>\r\n                <br></br>\r\n                <p>\r\n                    Results-oriented Software Developer highly effective at problem solving and\r\n                    conflict resolution. Hardworking and resourceful professional\r\n                    able to overcome challenge and work effectively in fast-paced, high-volume development environments<br></br>\r\n                    Mobile no: 8826381050\r\n                    emailId: swatidahiya44@gmail.com\r\n                 </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default About","import React, { Component } from 'react';\r\nclass Education extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"condiv\">\r\n<h1 className=\"subtopic\"><h4>B.Tech Degree from</h4> ADGITM, GGSIPU, new delhi</h1>\r\n\r\n<h1>Skills</h1>\r\n<h3>HTML</h3><br></br>\r\n<h3>CSS</h3><br></br>\r\n<h3>JavaScript</h3><br></br>\r\n<h3>ReactJs</h3><br></br>\r\n<br></br>\r\n\r\n</div>\r\n)\r\n}\r\n}\r\nexport default Education","import React from 'react';\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect,\n    Switch,\n} from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport Home from './contents/Home';\nimport About from './contents/About';\nimport Education from './contents/Education';\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Navbar />\n                <Switch>\n                    <Route exact path=\"/\"><Home /></Route>\n                    <Route path=\"/about\"><About /></Route>\n                    <Route path=\"/education\"><Education /></Route>\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}